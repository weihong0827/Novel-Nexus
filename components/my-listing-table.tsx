/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/jqW8VfZwwPX
 */
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { TableHead, TableRow, TableHeader, TableCell, TableBody, Table } from "@/components/ui/table"
import { Checkbox } from "@/components/ui/checkbox"
import { Book } from 'prisma/prisma-client'
import { BookUpload } from "@/components/upload/bookUpload"
import { Search } from 'lucide-react';
export interface ListingTableProps {
  books: Book[]
}

export const MyListingTable: React.FC<ListingTableProps> = ({ books }) => {
  return (
    <Card>
      <CardHeader>
        <CardTitle>My Listings</CardTitle>
        <CardDescription>Manage your book listings. Add new books or edit existing ones.</CardDescription>
        <CardDescription className="text-destructive w-96">The Majority of the functions in this page is not working as intended due to time, but the concept is similar to what is in the request page</CardDescription>
      </CardHeader>
      <CardContent className="p-0">
        <div className="flex items-center justify-between p-6">
          <form className="flex items-center gap-4">
            <Search className="h-4 w-4 text-gray-500 dark:text-gray-400" />
            <Input
              className="font-normal sm:w-[300px] md:w-[400px] lg:w-[500px] xl:w-[600px] 2xl:w-[700px] dark:placeholder-gray-400"
              placeholder="Search listings..."
              type="search"
            />
          </form>
          <BookUpload />
        </div>
        <div className="border-t border-gray-200 dark:border-gray-800">
          <Table className="divide-y">
            <TableHeader className="text-sm">
              <TableRow>
                <TableHead className="w-12">ID</TableHead>
                <TableHead className="min-w-[200px]">Title</TableHead>
                <TableHead className="min-w-[200px]">Author</TableHead>
                <TableHead className="min-w-[200px]">Genre</TableHead>
                <TableHead className="min-w-[100px]">Status</TableHead>
                <TableHead className="min-w-[100px]" /> {/* For actions like edit/delete */}
              </TableRow>
            </TableHeader>
            {books.map(book => (
              <TableBody key={book.id} className="text-sm">
                {/* Repeat TableRow for each book */}
                <TableRow className="hover:bg-gray-100 dark:hover:bg-gray-800">
                  <TableCell>{book.id}</TableCell>
                  <TableCell className="font-medium">{book.title}</TableCell>
                  <TableCell>{book.author}</TableCell>
                  <TableCell>{book.genre}</TableCell>
                  <TableCell>{book.status}</TableCell>
                  <TableCell className="flex gap-4 justify-end">
                    {/* Actions like edit/delete */}
                    <Button
                    >
                      Edit
                    </Button>
                    <Button variant="destructive"
                    >
                      Delete
                    </Button>
                  </TableCell>
                </TableRow>
                {/* End of TableRow repeat */}
              </TableBody>)
            )}
          </Table>
        </div>

      </CardContent>
    </Card>
  )
}


