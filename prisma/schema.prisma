// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model Book {
  id          Int                          @id @default(autoincrement())
  title       String
  author      String
  genre       String
  isbn        String?                      @unique
  description String?
  condition   String
  image       String[]
  ownerId     String
  owner       User                         @relation(fields: [ownerId], references: [id])
  seedAmount  Int
  exchanges   Exchange[]
  embedding   Unsupported("vector(1536)")?

  @@map("book")
}

model Exchange {
  id          Int           @id @default(autoincrement())
  bookId      Int
  book        Book          @relation(fields: [bookId], references: [id])
  requesterId String
  requester   User          @relation("Requester", fields: [requesterId], references: [id])
  ownerId     String
  owner       User          @relation("Owner", fields: [ownerId], references: [id])
  transaction Transaction[]
  status      String // e.g., "requested", "accepted", "declined", "completed"
  createdAt   DateTime      @default(now())
}

model Transaction {
  id         Int      @id @default(autoincrement())
  exchangeId Int
  exchange   Exchange @relation(fields: [exchangeId], references: [id])
  amount     Int
  status     String // e.g., "pending", "completed"
  createdAt  DateTime @default(now())
}

model User {
  id                 String     @id // This ID will be provided by the external authentication system.
  email              String     @unique // Assuming you might still store emails or other details.
  name               String?
  credits            Int        @default(0) // Tracks the credit balance of the user.
  books              Book[] // Relation to books they own or interact with.
  requestedExchanges Exchange[] @relation("Requester")
  ownedExchanges     Exchange[] @relation("Owner")
  // Other relevant fields but excluding authentication-specific ones.
}
